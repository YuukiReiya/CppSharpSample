// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace CppSharpSampleBinding
{
    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
    public unsafe delegate int FnSum(int __0, int __1);

    public unsafe partial class header
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("CppSharpSampleNative", EntryPoint = "Sum", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Sum(int a, int b);

            [SuppressUnmanagedCodeSecurity, DllImport("CppSharpSampleNative", EntryPoint = "Sum2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int Sum2(__IntPtr fn, int a, int b);
        }

        public static int Sum(int a, int b)
        {
            var __ret = __Internal.Sum(a, b);
            return __ret;
        }

        public static int Sum2(global::CppSharpSampleBinding.FnSum fn, int a, int b)
        {
            var __arg0 = fn == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(fn);
            var __ret = __Internal.Sum2(__arg0, a, b);
            return __ret;
        }
    }
}
